'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Appointments")>  _
Partial Public Class FunctionsDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAT_Appointment(instance As AT_Appointment)
    End Sub
  Partial Private Sub UpdateAT_Appointment(instance As AT_Appointment)
    End Sub
  Partial Private Sub DeleteAT_Appointment(instance As AT_Appointment)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AppointmentTracking_vb.My.MySettings.Default.AppointmentsConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AT_Appointments() As System.Data.Linq.Table(Of AT_Appointment)
		Get
			Return Me.GetTable(Of AT_Appointment)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CreateNewAppointment")>  _
	Public Function CreateNewAppointment(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AppointmentDate", DbType:="NVarChar(50)")> ByVal appointmentDate As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AppointmentTime", DbType:="NVarChar(50)")> ByVal appointmentTime As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AppointmentType", DbType:="NVarChar(50)")> ByVal appointmentType As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AppointmentDetails", DbType:="NVarChar(MAX)")> ByVal appointmentDetails As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="NVarChar(50)")> ByVal status As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), appointmentDate, appointmentTime, appointmentType, appointmentDetails, status)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AT_Appointments")>  _
Partial Public Class AT_Appointment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _AppointmentDate As String
	
	Private _AppointmentTime As String
	
	Private _AppointmentType As String
	
	Private _AppointmentDetails As String
	
	Private _Status As String
	
	Private _Created As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnAppointmentDateChanging(value As String)
    End Sub
    Partial Private Sub OnAppointmentDateChanged()
    End Sub
    Partial Private Sub OnAppointmentTimeChanging(value As String)
    End Sub
    Partial Private Sub OnAppointmentTimeChanged()
    End Sub
    Partial Private Sub OnAppointmentTypeChanging(value As String)
    End Sub
    Partial Private Sub OnAppointmentTypeChanged()
    End Sub
    Partial Private Sub OnAppointmentDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnAppointmentDetailsChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCreatedChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppointmentDate", DbType:="NVarChar(50)")>  _
	Public Property AppointmentDate() As String
		Get
			Return Me._AppointmentDate
		End Get
		Set
			If (String.Equals(Me._AppointmentDate, value) = false) Then
				Me.OnAppointmentDateChanging(value)
				Me.SendPropertyChanging
				Me._AppointmentDate = value
				Me.SendPropertyChanged("AppointmentDate")
				Me.OnAppointmentDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppointmentTime", DbType:="NVarChar(50)")>  _
	Public Property AppointmentTime() As String
		Get
			Return Me._AppointmentTime
		End Get
		Set
			If (String.Equals(Me._AppointmentTime, value) = false) Then
				Me.OnAppointmentTimeChanging(value)
				Me.SendPropertyChanging
				Me._AppointmentTime = value
				Me.SendPropertyChanged("AppointmentTime")
				Me.OnAppointmentTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppointmentType", DbType:="NVarChar(50)")>  _
	Public Property AppointmentType() As String
		Get
			Return Me._AppointmentType
		End Get
		Set
			If (String.Equals(Me._AppointmentType, value) = false) Then
				Me.OnAppointmentTypeChanging(value)
				Me.SendPropertyChanging
				Me._AppointmentType = value
				Me.SendPropertyChanged("AppointmentType")
				Me.OnAppointmentTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AppointmentDetails", DbType:="NVarChar(MAX)")>  _
	Public Property AppointmentDetails() As String
		Get
			Return Me._AppointmentDetails
		End Get
		Set
			If (String.Equals(Me._AppointmentDetails, value) = false) Then
				Me.OnAppointmentDetailsChanging(value)
				Me.SendPropertyChanging
				Me._AppointmentDetails = value
				Me.SendPropertyChanged("AppointmentDetails")
				Me.OnAppointmentDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created", DbType:="NVarChar(50)")>  _
	Public Property Created() As String
		Get
			Return Me._Created
		End Get
		Set
			If (String.Equals(Me._Created, value) = false) Then
				Me.OnCreatedChanging(value)
				Me.SendPropertyChanging
				Me._Created = value
				Me.SendPropertyChanged("Created")
				Me.OnCreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
